/*
 * StrainAddReference.java
 *
 * Created on September 16, 2005, 1:08 PM
 */

package org.jax.mgi.mtb.ei.panels;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import org.jax.mgi.mtb.dao.custom.mtb.MTBReferenceDetailDTO;
import org.jax.mgi.mtb.dao.custom.mtb.MTBReferenceUtilDAO;
import org.jax.mgi.mtb.dao.gen.mtb.AlleleDAO;
import org.jax.mgi.mtb.dao.gen.mtb.AlleleDTO;
import org.jax.mgi.mtb.dao.gen.mtb.AllelePairDAO;
import org.jax.mgi.mtb.dao.gen.mtb.AllelePairDTO;
import org.jax.mgi.mtb.dao.gen.mtb.AlleleTypeDAO;
import org.jax.mgi.mtb.dao.gen.mtb.AlleleTypeDTO;
import org.jax.mgi.mtb.ei.util.Utils;

/**
 *
 * @author  mjv
 */
public class StrainAddGenetics extends javax.swing.JPanel {
    private JDialog dlg = null;
    private StrainPanel pnlStrain = null;
    
    /** Creates new form StrainAddReference */
    public StrainAddGenetics(JDialog dlg, StrainPanel p) {
        initComponents();
        initCustom(dlg,  p);
    }
    
    private void initCustom(JDialog dlg, StrainPanel p) {
        this.dlg = dlg;    
        this.pnlStrain = p;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        pnlGenetics = new javax.swing.JPanel();
        pnlAllelePair = new javax.swing.JPanel();
        lblAllelePair = new javax.swing.JLabel();
        txtAllelePair = new javax.swing.JTextField();
        btnAllelePairLookup = new javax.swing.JButton();
        pnlReference = new javax.swing.JPanel();
        lblReference = new javax.swing.JLabel();
        txtReference = new javax.swing.JTextField();
        pnlAllele1 = new javax.swing.JPanel();
        pnlAllele1Name = new javax.swing.JPanel();
        lblAllele1Name = new javax.swing.JLabel();
        pnlAllele1NameInner = new javax.swing.JPanel();
        lblAllele1NameText = new javax.swing.JLabel();
        pnlAllele1Type = new javax.swing.JPanel();
        lblAllele1Type = new javax.swing.JLabel();
        pnlAllele1TypeInner = new javax.swing.JPanel();
        lblAllele1TypeText = new javax.swing.JLabel();
        pnlAllele1Symbol = new javax.swing.JPanel();
        lblAllele1Symbol = new javax.swing.JLabel();
        pnlAllele1SymbolInner = new javax.swing.JPanel();
        lblAllele1SymbolText = new javax.swing.JLabel();
        pnlAllele1Notes = new javax.swing.JPanel();
        lblAllele1Notes = new javax.swing.JLabel();
        pnlAllele1NotesInner = new javax.swing.JPanel();
        jspAllele1Notes = new javax.swing.JScrollPane();
        textareaAllele1Notes = new javax.swing.JTextArea();
        pnlAllele2 = new javax.swing.JPanel();
        pnlAllele2Name = new javax.swing.JPanel();
        lblAllele2Name = new javax.swing.JLabel();
        pnlAllele2NameInner = new javax.swing.JPanel();
        lblAllele2NameText = new javax.swing.JLabel();
        pnlAllele2Type = new javax.swing.JPanel();
        lblAllele2Type = new javax.swing.JLabel();
        pnlAllele2TypeInner = new javax.swing.JPanel();
        lblAllele2TypeText = new javax.swing.JLabel();
        pnlAllele2Symbol = new javax.swing.JPanel();
        lblAllele2Symbol = new javax.swing.JLabel();
        pnlAllele2SymbolInner = new javax.swing.JPanel();
        lblAllele2SymbolText = new javax.swing.JLabel();
        pnlAllele2Notes = new javax.swing.JPanel();
        lblAllele2Notes = new javax.swing.JLabel();
        pnlAllele2NotesInner = new javax.swing.JPanel();
        jspAllele2Notes = new javax.swing.JScrollPane();
        textareaAllele2Notes = new javax.swing.JTextArea();
        pnlButtons = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        us.jawsoft.gui.layout.JawVerticalFlowLayout jawVerticalFlowLayout4 = new us.jawsoft.gui.layout.JawVerticalFlowLayout();
        jawVerticalFlowLayout4.setHorizontalAlignment(3);
        setLayout(jawVerticalFlowLayout4);

        setBorder(javax.swing.BorderFactory.createTitledBorder("Add Genetics"));
        us.jawsoft.gui.layout.JawVerticalFlowLayout jawVerticalFlowLayout1 = new us.jawsoft.gui.layout.JawVerticalFlowLayout();
        jawVerticalFlowLayout1.setHorizontalAlignment(3);
        pnlGenetics.setLayout(jawVerticalFlowLayout1);

        pnlAllelePair.setLayout(new java.awt.BorderLayout(10, 0));

        lblAllelePair.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAllelePair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jax/mgi/mtb/ei/resources/img/Key16.png")));
        lblAllelePair.setText("Allele Pair Key");
        lblAllelePair.setMaximumSize(new java.awt.Dimension(100, 14));
        lblAllelePair.setMinimumSize(new java.awt.Dimension(100, 14));
        lblAllelePair.setPreferredSize(new java.awt.Dimension(100, 14));
        pnlAllelePair.add(lblAllelePair, java.awt.BorderLayout.WEST);

        txtAllelePair.setColumns(20);
        pnlAllelePair.add(txtAllelePair, java.awt.BorderLayout.CENTER);

        btnAllelePairLookup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jax/mgi/mtb/ei/resources/img/search16x16.png")));
        btnAllelePairLookup.setText("Lookup");
        btnAllelePairLookup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllelePairLookupActionPerformed(evt);
            }
        });

        pnlAllelePair.add(btnAllelePairLookup, java.awt.BorderLayout.EAST);

        pnlGenetics.add(pnlAllelePair);

        pnlReference.setLayout(new java.awt.BorderLayout(10, 0));

        lblReference.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblReference.setText("JNumber");
        lblReference.setMaximumSize(new java.awt.Dimension(100, 14));
        lblReference.setMinimumSize(new java.awt.Dimension(100, 14));
        lblReference.setPreferredSize(new java.awt.Dimension(100, 14));
        pnlReference.add(lblReference, java.awt.BorderLayout.WEST);

        txtReference.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReferenceFocusLost(evt);
            }
        });

        pnlReference.add(txtReference, java.awt.BorderLayout.CENTER);

        pnlGenetics.add(pnlReference);

        us.jawsoft.gui.layout.JawVerticalFlowLayout jawVerticalFlowLayout2 = new us.jawsoft.gui.layout.JawVerticalFlowLayout();
        jawVerticalFlowLayout2.setHorizontalAlignment(3);
        jawVerticalFlowLayout2.setVerticalGap(2);
        pnlAllele1.setLayout(jawVerticalFlowLayout2);

        pnlAllele1.setBorder(javax.swing.BorderFactory.createTitledBorder("Allele1 Information"));
        pnlAllele1Name.setLayout(new java.awt.BorderLayout(2, 0));

        lblAllele1Name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAllele1Name.setText("Name");
        lblAllele1Name.setMaximumSize(new java.awt.Dimension(80, 15));
        lblAllele1Name.setMinimumSize(new java.awt.Dimension(80, 15));
        lblAllele1Name.setPreferredSize(new java.awt.Dimension(80, 15));
        pnlAllele1Name.add(lblAllele1Name, java.awt.BorderLayout.WEST);

        pnlAllele1NameInner.setLayout(new java.awt.BorderLayout());

        pnlAllele1NameInner.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlAllele1NameInner.add(lblAllele1NameText, java.awt.BorderLayout.CENTER);

        pnlAllele1Name.add(pnlAllele1NameInner, java.awt.BorderLayout.CENTER);

        pnlAllele1.add(pnlAllele1Name);

        pnlAllele1Type.setLayout(new java.awt.BorderLayout(2, 0));

        lblAllele1Type.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAllele1Type.setText("Type");
        lblAllele1Type.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblAllele1Type.setMaximumSize(new java.awt.Dimension(80, 15));
        lblAllele1Type.setMinimumSize(new java.awt.Dimension(80, 15));
        lblAllele1Type.setPreferredSize(new java.awt.Dimension(80, 15));
        pnlAllele1Type.add(lblAllele1Type, java.awt.BorderLayout.WEST);

        pnlAllele1TypeInner.setLayout(new java.awt.BorderLayout());

        pnlAllele1TypeInner.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlAllele1TypeInner.add(lblAllele1TypeText, java.awt.BorderLayout.NORTH);

        pnlAllele1Type.add(pnlAllele1TypeInner, java.awt.BorderLayout.CENTER);

        pnlAllele1.add(pnlAllele1Type);

        pnlAllele1Symbol.setLayout(new java.awt.BorderLayout(2, 0));

        lblAllele1Symbol.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAllele1Symbol.setText("Symbol");
        lblAllele1Symbol.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblAllele1Symbol.setMaximumSize(new java.awt.Dimension(80, 15));
        lblAllele1Symbol.setMinimumSize(new java.awt.Dimension(80, 15));
        lblAllele1Symbol.setPreferredSize(new java.awt.Dimension(80, 15));
        pnlAllele1Symbol.add(lblAllele1Symbol, java.awt.BorderLayout.WEST);

        pnlAllele1SymbolInner.setLayout(new java.awt.BorderLayout());

        pnlAllele1SymbolInner.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlAllele1SymbolInner.add(lblAllele1SymbolText, java.awt.BorderLayout.NORTH);

        pnlAllele1Symbol.add(pnlAllele1SymbolInner, java.awt.BorderLayout.CENTER);

        pnlAllele1.add(pnlAllele1Symbol);

        pnlAllele1Notes.setLayout(new java.awt.BorderLayout(2, 0));

        lblAllele1Notes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAllele1Notes.setText("Notes");
        lblAllele1Notes.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblAllele1Notes.setMaximumSize(new java.awt.Dimension(80, 15));
        lblAllele1Notes.setMinimumSize(new java.awt.Dimension(80, 15));
        lblAllele1Notes.setPreferredSize(new java.awt.Dimension(80, 15));
        pnlAllele1Notes.add(lblAllele1Notes, java.awt.BorderLayout.WEST);

        pnlAllele1NotesInner.setLayout(new java.awt.BorderLayout());

        pnlAllele1NotesInner.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlAllele1NotesInner.setEnabled(false);
        textareaAllele1Notes.setBackground(javax.swing.UIManager.getDefaults().getColor("Label.background"));
        textareaAllele1Notes.setLineWrap(true);
        textareaAllele1Notes.setRows(3);
        jspAllele1Notes.setViewportView(textareaAllele1Notes);

        pnlAllele1NotesInner.add(jspAllele1Notes, java.awt.BorderLayout.CENTER);

        pnlAllele1Notes.add(pnlAllele1NotesInner, java.awt.BorderLayout.CENTER);

        pnlAllele1.add(pnlAllele1Notes);

        pnlGenetics.add(pnlAllele1);

        us.jawsoft.gui.layout.JawVerticalFlowLayout jawVerticalFlowLayout3 = new us.jawsoft.gui.layout.JawVerticalFlowLayout();
        jawVerticalFlowLayout3.setHorizontalAlignment(3);
        jawVerticalFlowLayout3.setVerticalGap(2);
        pnlAllele2.setLayout(jawVerticalFlowLayout3);

        pnlAllele2.setBorder(javax.swing.BorderFactory.createTitledBorder("Allele2 Information"));
        pnlAllele2Name.setLayout(new java.awt.BorderLayout(2, 0));

        lblAllele2Name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAllele2Name.setText("Name");
        lblAllele2Name.setMaximumSize(new java.awt.Dimension(80, 15));
        lblAllele2Name.setMinimumSize(new java.awt.Dimension(80, 15));
        lblAllele2Name.setPreferredSize(new java.awt.Dimension(80, 15));
        pnlAllele2Name.add(lblAllele2Name, java.awt.BorderLayout.WEST);

        pnlAllele2NameInner.setLayout(new java.awt.BorderLayout());

        pnlAllele2NameInner.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlAllele2NameInner.add(lblAllele2NameText, java.awt.BorderLayout.CENTER);

        pnlAllele2Name.add(pnlAllele2NameInner, java.awt.BorderLayout.CENTER);

        pnlAllele2.add(pnlAllele2Name);

        pnlAllele2Type.setLayout(new java.awt.BorderLayout(2, 0));

        lblAllele2Type.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAllele2Type.setText("Type");
        lblAllele2Type.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblAllele2Type.setMaximumSize(new java.awt.Dimension(80, 15));
        lblAllele2Type.setMinimumSize(new java.awt.Dimension(80, 15));
        lblAllele2Type.setPreferredSize(new java.awt.Dimension(80, 15));
        pnlAllele2Type.add(lblAllele2Type, java.awt.BorderLayout.WEST);

        pnlAllele2TypeInner.setLayout(new java.awt.BorderLayout());

        pnlAllele2TypeInner.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlAllele2TypeInner.add(lblAllele2TypeText, java.awt.BorderLayout.NORTH);

        pnlAllele2Type.add(pnlAllele2TypeInner, java.awt.BorderLayout.CENTER);

        pnlAllele2.add(pnlAllele2Type);

        pnlAllele2Symbol.setLayout(new java.awt.BorderLayout(2, 0));

        lblAllele2Symbol.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAllele2Symbol.setText("Symbol");
        lblAllele2Symbol.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblAllele2Symbol.setMaximumSize(new java.awt.Dimension(80, 15));
        lblAllele2Symbol.setMinimumSize(new java.awt.Dimension(80, 15));
        lblAllele2Symbol.setPreferredSize(new java.awt.Dimension(80, 15));
        pnlAllele2Symbol.add(lblAllele2Symbol, java.awt.BorderLayout.WEST);

        pnlAllele2SymbolInner.setLayout(new java.awt.BorderLayout());

        pnlAllele2SymbolInner.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlAllele2SymbolInner.add(lblAllele2SymbolText, java.awt.BorderLayout.NORTH);

        pnlAllele2Symbol.add(pnlAllele2SymbolInner, java.awt.BorderLayout.CENTER);

        pnlAllele2.add(pnlAllele2Symbol);

        pnlAllele2Notes.setLayout(new java.awt.BorderLayout(2, 0));

        lblAllele2Notes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAllele2Notes.setText("Notes");
        lblAllele2Notes.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblAllele2Notes.setMaximumSize(new java.awt.Dimension(80, 15));
        lblAllele2Notes.setMinimumSize(new java.awt.Dimension(80, 15));
        lblAllele2Notes.setPreferredSize(new java.awt.Dimension(80, 15));
        pnlAllele2Notes.add(lblAllele2Notes, java.awt.BorderLayout.WEST);

        pnlAllele2NotesInner.setLayout(new java.awt.BorderLayout());

        pnlAllele2NotesInner.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlAllele2NotesInner.setEnabled(false);
        textareaAllele2Notes.setBackground(javax.swing.UIManager.getDefaults().getColor("Label.background"));
        textareaAllele2Notes.setLineWrap(true);
        textareaAllele2Notes.setRows(3);
        jspAllele2Notes.setViewportView(textareaAllele2Notes);

        pnlAllele2NotesInner.add(jspAllele2Notes, java.awt.BorderLayout.CENTER);

        pnlAllele2Notes.add(pnlAllele2NotesInner, java.awt.BorderLayout.CENTER);

        pnlAllele2.add(pnlAllele2Notes);

        pnlGenetics.add(pnlAllele2);

        add(pnlGenetics);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jax/mgi/mtb/ei/resources/img/Add16.png")));
        btnAdd.setText("Add");
        btnAdd.setMaximumSize(new java.awt.Dimension(100, 22));
        btnAdd.setMinimumSize(new java.awt.Dimension(100, 22));
        btnAdd.setPreferredSize(new java.awt.Dimension(100, 22));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        pnlButtons.add(btnAdd);

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jax/mgi/mtb/ei/resources/img/Close16.png")));
        btnCancel.setText("Cancel");
        btnCancel.setMaximumSize(new java.awt.Dimension(100, 22));
        btnCancel.setMinimumSize(new java.awt.Dimension(100, 22));
        btnCancel.setPreferredSize(new java.awt.Dimension(100, 22));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        pnlButtons.add(btnCancel);

        add(pnlButtons);

    }// </editor-fold>//GEN-END:initComponents

    private void txtReferenceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReferenceFocusLost
        String jnum = Utils.fixJNumber(txtReference.getText());
        txtReference.setText(jnum);
    }//GEN-LAST:event_txtReferenceFocusLost

    private void btnAllelePairLookupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllelePairLookupActionPerformed
        try {
            long apKey = Long.parseLong(txtAllelePair.getText());
            
                        AlleleDAO daoAllele = AlleleDAO.getInstance();
            AllelePairDAO daoAllelePair = AllelePairDAO.getInstance();
            AlleleTypeDAO daoAlleleType = AlleleTypeDAO.getInstance();
            AllelePairDTO dtoAllelePair = daoAllelePair.loadByPrimaryKey(new Long(apKey));;
            AlleleDTO dtoAllele1 = daoAllele.loadByPrimaryKey(dtoAllelePair.getAllele1Key());
            AlleleDTO dtoAllele2 = null;
            
            if (dtoAllelePair.getAllele2Key() != null) {
                dtoAllele2 = daoAllele.loadByPrimaryKey(dtoAllelePair.getAllele2Key());
            }
            
            // populate allele1
            lblAllele1NameText.setText(dtoAllele1.getName());
            AlleleTypeDTO dtoAlleleType = daoAllele.getAlleleTypeDTO(dtoAllele1);
            lblAllele1TypeText.setText(dtoAlleleType.getType());
            lblAllele1SymbolText.setText(dtoAllele1.getSymbol());
            textareaAllele1Notes.setText(dtoAllele1.getNote());
            
            if (dtoAllelePair.getAllele2Key() != null) {
                // populate allele2
                lblAllele2NameText.setText(dtoAllele2.getName());
                dtoAlleleType = daoAllele.getAlleleTypeDTO(dtoAllele2);
                lblAllele2TypeText.setText(dtoAlleleType.getType());
                lblAllele2SymbolText.setText(dtoAllele2.getSymbol());
                textareaAllele2Notes.setText(dtoAllele2.getNote());
            }
        } catch (Exception e) {
            Utils.showErrorDialog("Unable to find AllelePair key: " + txtAllelePair.getText());
            String blank = "";
            lblAllele1NameText.setText(blank);
            lblAllele1TypeText.setText(blank);
            lblAllele1SymbolText.setText(blank);
            textareaAllele1Notes.setText(blank);
            lblAllele2NameText.setText(blank);
            lblAllele2TypeText.setText(blank);
            lblAllele2SymbolText.setText(blank);
            textareaAllele2Notes.setText(blank);
        }
        this.revalidate();
    }//GEN-LAST:event_btnAllelePairLookupActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (dlg != null) {
            if (validData()) {
                //pnlStrain.addGenetics(txtAllelePair.getText(), txtReference.getText(), lblAllele1SymbolText.getText(), lblAllele2SymbolText.getText());
                dlg.dispose();
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if (dlg != null) {
            dlg.dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed
    
    private boolean validData() {
        String s = txtReference.getText();
        
        try {
                        MTBReferenceUtilDAO dao = MTBReferenceUtilDAO.getInstance();
            MTBReferenceDetailDTO dto = dao.getReferenceByAccession(s);
            
            if ((dto == null) || (dto.getKey() <= 0)) {
                JOptionPane.showMessageDialog(null, s + " is not a valid JNumber.");
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, s + " is not a valid JNumber.");
            return false;
        }
    
        return true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAllelePairLookup;
    private javax.swing.JButton btnCancel;
    private javax.swing.JScrollPane jspAllele1Notes;
    private javax.swing.JScrollPane jspAllele2Notes;
    private javax.swing.JLabel lblAllele1Name;
    private javax.swing.JLabel lblAllele1NameText;
    private javax.swing.JLabel lblAllele1Notes;
    private javax.swing.JLabel lblAllele1Symbol;
    private javax.swing.JLabel lblAllele1SymbolText;
    private javax.swing.JLabel lblAllele1Type;
    private javax.swing.JLabel lblAllele1TypeText;
    private javax.swing.JLabel lblAllele2Name;
    private javax.swing.JLabel lblAllele2NameText;
    private javax.swing.JLabel lblAllele2Notes;
    private javax.swing.JLabel lblAllele2Symbol;
    private javax.swing.JLabel lblAllele2SymbolText;
    private javax.swing.JLabel lblAllele2Type;
    private javax.swing.JLabel lblAllele2TypeText;
    private javax.swing.JLabel lblAllelePair;
    private javax.swing.JLabel lblReference;
    private javax.swing.JPanel pnlAllele1;
    private javax.swing.JPanel pnlAllele1Name;
    private javax.swing.JPanel pnlAllele1NameInner;
    private javax.swing.JPanel pnlAllele1Notes;
    private javax.swing.JPanel pnlAllele1NotesInner;
    private javax.swing.JPanel pnlAllele1Symbol;
    private javax.swing.JPanel pnlAllele1SymbolInner;
    private javax.swing.JPanel pnlAllele1Type;
    private javax.swing.JPanel pnlAllele1TypeInner;
    private javax.swing.JPanel pnlAllele2;
    private javax.swing.JPanel pnlAllele2Name;
    private javax.swing.JPanel pnlAllele2NameInner;
    private javax.swing.JPanel pnlAllele2Notes;
    private javax.swing.JPanel pnlAllele2NotesInner;
    private javax.swing.JPanel pnlAllele2Symbol;
    private javax.swing.JPanel pnlAllele2SymbolInner;
    private javax.swing.JPanel pnlAllele2Type;
    private javax.swing.JPanel pnlAllele2TypeInner;
    private javax.swing.JPanel pnlAllelePair;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlGenetics;
    private javax.swing.JPanel pnlReference;
    private javax.swing.JTextArea textareaAllele1Notes;
    private javax.swing.JTextArea textareaAllele2Notes;
    private javax.swing.JTextField txtAllelePair;
    private javax.swing.JTextField txtReference;
    // End of variables declaration//GEN-END:variables
    
}
