/**
 * Header: /mgi/cvsroot/mgi/mtb/mtbei/src/org/jax/mgi/mtb/ei/panels/ConsolePanel.java,v 1.1 2007/04/30 15:50:54 mjv Exp
 * Author: mjv
 */
package org.jax.mgi.mtb.ei.panels;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import javax.swing.JScrollBar;
import javax.swing.border.TitledBorder;
import org.jax.mgi.mtb.ei.EIConstants;
import org.jax.mgi.mtb.utils.StringUtils;

/**
 * A simple <code>JPanel</code> that displays logging information.
 *
 * @author mjv
 * @date 2007/04/30 15:50:54
 * @version 1.1
 * @cvsheader /mgi/cvsroot/mgi/mtb/mtbei/src/org/jax/mgi/mtb/ei/panels/ConsolePanel.java,v 1.1 2007/04/30 15:50:54 mjv Exp
 */
public class ConsolePanel extends javax.swing.JPanel {

    // -------------------------------------------------------------- Constants
    // none

    // ----------------------------------------------------- Instance Variables

    private String strTitle = null;


    // ----------------------------------------------------------- Constructors

    /**
     * Default constructor.
     */
    public ConsolePanel() {
        this(null);
    }

    /**
     * Constructor.
     * 
     * @param strTitle the title of the panel
     */
    public ConsolePanel(String strTitle) {
        initComponents();
        this.strTitle = strTitle;
        initCustom();
    }


    // --------------------------------------------------------- Public Methods

    /**
     * Append text to the log.
     *
     * @param str the text to append
     */
    public void append(String str) {
        addText(str);
    }

    /**
     * Append text to the log.
     *
     * @param buf the text to append
     */
    public void append(StringBuffer buf) {
        addText(buf.toString());

    }

    /**
     * Append text to the log.
     *
     * @param e the <code>Exception</code> to append
     */
    public void append(Exception e) {
        append(e.getMessage());
        append(StringUtils.getStackTrace(e));

    }

    /**
     * Set the foreground color.
     *
     * @param c the foreground color
     */
    public void setForeground(Color c) {
        if ((c != null) && (textareaConsole != null)) {
            textareaConsole.setForeground(c);
        }
    }

    /**
     * Set the background color.
     *
     * @param c the background color
     */
    public void setBackground(Color c) {
        if ((c != null) && (textareaConsole != null)) {
            textareaConsole.setBackground(c);
        }
    }

    /**
     * Set the font to use.
     *
     * @param f the font
     */
    public void setFont(Font f) {
        if ((f != null) && (textareaConsole != null)) {
            textareaConsole.setFont(f);
        }
    }


    // ------------------------------------------------------ Protected Methods
    // none

    // -------------------------------------------------------- Private Methods

    /**
     * Initialize custom components.
     */
    private void initCustom() {
        textareaConsole.setRows(10);

        if (strTitle != null) {
            this.setBorder(new TitledBorder(strTitle));
        }

    }

    /**
     * Add the text to the end of the console.
     *
     * @param text the text to add
     */
    private void addText(final String text) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                textareaConsole.append(text);
                textareaConsole.append(EIConstants.EOL);

                // make sure the last line is always visible
                // scroll down
                JScrollBar sb = jspConsole.getVerticalScrollBar();
                sb.setValue(sb.getMaximum());	        
            }
        });
    }


    // ------------------------------------------------------------------------
    // ------------------------------------------------ NetBeans Generated Code
    // ------------------------------------------------------------------------
    // TAKE EXTREME CARE MODIFYING CODE BELOW THIS LINE

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jspConsole = new javax.swing.JScrollPane();
        textareaConsole = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        textareaConsole.setColumns(20);
        jspConsole.setViewportView(textareaConsole);

        add(jspConsole, java.awt.BorderLayout.CENTER);

    }
    // </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JScrollPane jspConsole;
    public javax.swing.JTextArea textareaConsole;
    // End of variables declaration//GEN-END:variables

}
